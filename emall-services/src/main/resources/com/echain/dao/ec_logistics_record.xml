<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.echain.dao.LogisticsRecordDao" >
  <resultMap id="BaseResultMap" type="com.echain.entity.LogisticsRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="logistics_company_id" property="logisticsCompanyId" jdbcType="BIGINT" />
    <result column="transaction_id" property="transactionId" jdbcType="BIGINT" />
    <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="optioner_name" property="optionerName" jdbcType="VARCHAR" />
    <result column="option_content" property="optionContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.echain.entity.LogisticsRecord" extends="BaseResultMap" >
    <result column="describe_text" property="describeText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, logistics_company_id, transaction_id, product_name, optioner_name, option_content, create_time
  </sql>
  <sql id="Blob_Column_List" >
    describe_text
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ec_logistics_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ec_logistics_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.echain.entity.LogisticsRecord" >
    insert into ec_logistics_record (id, logistics_company_id, transaction_id, 
      logistics_no, product_name, optioner_name, option_content, 
      create_time, describe_text)
    values (#{id,jdbcType=BIGINT}, #{logisticsCompanyId,jdbcType=BIGINT}, #{transactionId,jdbcType=BIGINT}, 
      	#{logisticsNo,jdbcType=VARCHAR},#{productName,jdbcType=VARCHAR}, #{optionerName,jdbcType=VARCHAR}, #{optionContent,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{describeText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.echain.entity.LogisticsRecord" >
    insert into ec_logistics_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="logisticsCompanyId != null" >
        logistics_company_id,
      </if>
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="logisticsNo != null" >
      	logistics_no,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="optionerName != null" >
        optioner_name,
      </if>
      <if test="optionContent != null" >
        option_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="describeText != null" >
        describe_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="logisticsCompanyId != null" >
        #{logisticsCompanyId,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="logisticsNo != null" >
      	#{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="optionerName != null" >
        #{optionerName,jdbcType=VARCHAR},
      </if>
      <if test="optionContent != null" >
        #{optionContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describeText != null" >
        #{describeText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.echain.entity.LogisticsRecord" >
    update ec_logistics_record
    <set >
      <if test="logisticsCompanyId != null" >
        logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null" >
        transaction_id = #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="logisticsNo != null" >
      	logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="optionerName != null" >
        optioner_name = #{optionerName,jdbcType=VARCHAR},
      </if>
      <if test="optionContent != null" >
        option_content = #{optionContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describeText != null" >
        describe_text = #{describeText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.echain.entity.LogisticsRecord" >
    update ec_logistics_record
    set logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      transaction_id = #{transactionId,jdbcType=BIGINT},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      optioner_name = #{optionerName,jdbcType=VARCHAR},
      option_content = #{optionContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      describe_text = #{describeText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.echain.entity.LogisticsRecord" >
    update ec_logistics_record
    set logistics_company_id = #{logisticsCompanyId,jdbcType=BIGINT},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      optioner_name = #{optionerName,jdbcType=VARCHAR},
      option_content = #{optionContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>