<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- 配置spring上下文 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下-->
	<context-param>
		<description>load config file</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml
		</param-value>
	</context-param>

	<!-- 配置log4j日志上下文 指定log4j.properties的配置文件所在目录。默认配置在WEB-INF目录下-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	
	<!--Spring配置 对spring上下文添加监听 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>
	
	<!-- 配置spring核心servlet -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<!-- 启动顺序，让这个Servlet随Servletp容器一起启动 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- url-pattern配置为/，不带文件后缀，会造成其它静态文件(js，css等)不能访问。如配为*.do，则不影响静态文件的访问 -->
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	

	<!-- 设置编码过滤器 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 为所有页面配置EL表达式支持 -->
	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
	</jsp-config>

	<!-- 配置找不到页面时返回的页面 
		<error-page>
		<error-code>404</error-code>
		<location>/welcome/null</location>
		</error-page>
		<error-page>
		<error-code>500</error-code>
		<location>/welcome/null</location>
		</error-page>-->

	<!-- 配置session超时 单位为分钟  -->
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	
	<!-- 配置文本上传Servlet  -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>OmFileUploadServlet</servlet-name> -->
<!-- 		<servlet-class>com.hisodata.upload.OmFileUploadServlet</servlet-class> -->
<!-- 	</servlet> -->
	
	<!-- 配置JFreeChart  -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>OmFileUploadServlet</servlet-name> -->
<!-- 		<url-pattern>/OmFileUploadServlet</url-pattern> -->
<!-- 	</servlet-mapping> -->
	
	<servlet>
          <servlet-name>DisplayChart</servlet-name>
          <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
	</servlet>
	<servlet-mapping>
	          <servlet-name>DisplayChart</servlet-name>
	          <url-pattern>/DisplayChart</url-pattern>
	</servlet-mapping>
	
	
	<!-- 微信公众平台接口校验 
	<servlet>
    <servlet-name>CoreServlet</servlet-name>
    <servlet-class>com.hisodata.base.service.CoreServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>CoreServlet</servlet-name>
    <url-pattern>/CoreServlet</url-pattern>
  </servlet-mapping>-->
	
	
</web-app>
